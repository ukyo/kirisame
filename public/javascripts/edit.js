// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.onload = function() {
    var $, home, infoPanel, isNewEntry, md2html, metadataPanel, nameField, oldTags, previewWindow, save, tagsField, titleField, validate;
    $ = document.querySelector.bind(document);
    window.editor = ace.edit('editor');
    editor.setShowInvisibles(true);
    editor.getSession().setUseWrapMode(true);
    editor.getSession().setTabSize(2);
    editor.getSession().setMode('ace/mode/markdown');
    editor.setTheme('ace/theme/ambiance');
    titleField = $('input[name=title]');
    nameField = $('input[name=name]');
    tagsField = $('input[name=tags]');
    isNewEntry = /^.*\/admin\/entry[\/#]?$/.test(location.href);
    oldTags = tagsField.value;
    md2html = function(md) {
      var code, dummy, lang, pre, pres, _i, _len;
      dummy = document.createElement('p');
      dummy.innerHTML = markdown.toHTML5(md, 'GFM');
      pres = dummy.querySelectorAll('pre[class^=lang]');
      for (_i = 0, _len = pres.length; _i < _len; _i++) {
        pre = pres[_i];
        code = pre.querySelector('code');
        lang = pre.getAttribute('class').match(/lang-([a-zA-Z+]*)/)[1];
        if (lang === 'c' || lang === 'cpp') {
          lang = 'c_cpp';
        }
        pre.innerHTML = ace.highlight(code.innerHTML, "ace/mode/" + lang).innerHTML;
      }
      return dummy.innerHTML;
    };
    /*
      User inputs metadatas from the this panel.
      metadatas:
      * Entry title
      * Entry name(http://example.com/entry/path-to-entry)
      * Tags that is sepalated ','.
    */

    metadataPanel = new ((function() {
      var panel;

      function _Class() {
        this.isVisibled = __bind(this.isVisibled, this);

        this.toggle = __bind(this.toggle, this);

        this.hide = __bind(this.hide, this);

        this.show = __bind(this.show, this);

      }

      panel = $('#metadata .wrap');

      _Class.prototype.show = function() {
        panel.classList.remove('disabled');
        return titleField.focus();
      };

      _Class.prototype.hide = function() {
        panel.classList.add('disabled');
        return editor.focus();
      };

      _Class.prototype.toggle = function() {
        if (!this.isVisibled()) {
          return this.show();
        } else {
          return this.hide();
        }
      };

      _Class.prototype.isVisibled = function() {
        return !panel.classList.contains('disabled');
      };

      return _Class;

    })());
    /*
      previewWindow controlls the realtime preview window.
      It watches editing texts and update every a second.
      Ofcourse, if texts was not updated, it does not update the preview.
    */

    previewWindow = new ((function() {
      var current, interval, prev, preview;

      function _Class() {
        this.update = __bind(this.update, this);

        this.stop = __bind(this.stop, this);

        this.run = __bind(this.run, this);

        this.isOpen = __bind(this.isOpen, this);

        this.toggle = __bind(this.toggle, this);

        this.close = __bind(this.close, this);

        this.open = __bind(this.open, this);

      }

      prev = null;

      current = editor.getValue();

      preview = null;

      interval = null;

      _Class.prototype.open = function() {
        var _this = this;
        if (this.isOpen()) {
          return;
        }
        preview = window.open('/admin/preview', 'preview', 'width=800,height=600');
        return preview.onload = function() {
          _this.update();
          return _this.run();
        };
      };

      _Class.prototype.close = function() {
        if (this.isOpen()) {
          preview.close();
          this.stop();
          return prev = null;
        }
      };

      _Class.prototype.toggle = function() {
        if (!this.isOpen()) {
          return this.open();
        } else {
          return this.close();
        }
      };

      _Class.prototype.isOpen = function() {
        if (!preview) {
          return false;
        } else {
          return !preview.closed;
        }
      };

      _Class.prototype.run = function() {
        return interval = setInterval(this.update, 1000);
      };

      _Class.prototype.stop = function() {
        return clearInterval(interval);
      };

      _Class.prototype.update = function() {
        var message;
        console.log(Date.now());
        if (!this.isOpen()) {
          return;
        }
        current = editor.getValue();
        if (prev === current) {
          return;
        }
        prev = current;
        message = {
          title: titleField.value,
          tags: tagsField.value,
          body: md2html(current)
        };
        return preview.postMessage(message, '*');
      };

      return _Class;

    })());
    /*
      This panel notifies some informations.
      It down from adove of the window.
    */

    infoPanel = new ((function() {
      var panel;

      function _Class() {
        this.setContent = __bind(this.setContent, this);

        this.hide = __bind(this.hide, this);

        this.show = __bind(this.show, this);

      }

      panel = $('#info');

      _Class.prototype.show = function() {
        return panel.classList.remove('disabled');
      };

      _Class.prototype.hide = function() {
        return panel.classList.add('disabled');
      };

      _Class.prototype.setContent = function(content) {
        return panel.innerHTML = content;
      };

      return _Class;

    })());
    validate = function() {
      if (titleField.value === '') {
        metadataPanel.show();
        return false;
      }
      if (nameField.value === '') {
        metadataPanel.show();
        nameField.focus();
        return false;
      }
      return true;
    };
    save = function() {
      var fd, method, xhr;
      if (!validate()) {
        return;
      }
      xhr = new XMLHttpRequest;
      method = isNewEntry ? 'POST' : 'PUT';
      xhr.open(method, "/admin/entry/" + nameField.value);
      xhr.onload = function() {
        var href;
        if (xhr.response === 'error') {
          return;
        }
        href = "http://" + location.host + "/entry/" + nameField.value;
        infoPanel.setContent("succeeded to save: <a href='" + href + "' target='_blank'>" + href + "</a>");
        infoPanel.show();
        setTimeout(infoPanel.hide, 5000);
        isNewEntry = false;
        return oldTags = tagsField.value;
      };
      fd = common.createFormData({
        title: titleField.value,
        name: nameField.value,
        tags: tagsField.value,
        oldTags: oldTags,
        text: editor.getValue(),
        html: md2html(editor.getValue())
      });
      return xhr.send(fd);
    };
    home = function() {
      if (confirm('back to admin home.')) {
        return location.href = '/admin';
      }
    };
    $('#home').onclick = home;
    $('#preview').onclick = previewWindow.toggle;
    $('#save').onclick = save;
    shortcut.add('Ctrl+I', metadataPanel.toggle);
    shortcut.add('Ctrl+S', save);
    return shortcut.add('Ctrl+Shift+H', home);
  };

}).call(this);
