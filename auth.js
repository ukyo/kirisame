// Generated by CoffeeScript 1.4.0
(function() {
  var LocalStrategy, admin, authenticate, config, ensureAuthenticated, passport;

  passport = require("passport");

  LocalStrategy = require("passport-local").Strategy;

  config = require('./config');

  admin = {
    id: 1,
    username: config.username,
    password: config.password
  };

  ensureAuthenticated = function(redirects) {
    return function(req, res, next) {
      if (req.isAuthenticated()) {
        return next();
      }
      return res.redirect(redirects.failureRedirect);
    };
  };

  authenticate = function(redirects) {
    return passport.authenticate("local", redirects);
  };

  passport.serializeUser(function(user, done) {
    return done(null, user.id);
  });

  passport.deserializeUser(function(id, done) {
    if (id === admin.id) {
      return done(null, admin);
    }
    return done('error', false);
  });

  passport.use(new LocalStrategy(function(username, password, done) {
    return process.nextTick(function() {
      if (username === admin.username && password === admin.password) {
        return done(null, admin);
      }
      return done(null, false, {
        message: 'username or password are invalid.'
      });
    });
  }));

  module.exports.ensureAuthenticated = ensureAuthenticated;

  module.exports.passport = passport;

  module.exports.authenticate = authenticate;

}).call(this);
